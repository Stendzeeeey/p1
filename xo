import random

# Создаем пустое поле 3x3
board = [[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']]

# Выводим поле на экран
def print_board():
    print('-------------')
    for i in range(3):
        print('|', board[i][0], '|', board[i][1], '|', board[i][2], '|')
        print('-------------')

# Проверяем, есть ли выигрышная комбинация или ничья
def check_win(mark):
    if (board[0][0] == mark and board[0][1] == mark and board[0][2] == mark) or \
        (board[1][0] == mark and board[1][1] == mark and board[1][2] == mark) or \
        (board[2][0] == mark and board[2][1] == mark and board[2][2] == mark) or \
        (board[0][0] == mark and board[1][0] == mark and board[2][0] == mark) or \
        (board[0][1] == mark and board[1][1] == mark and board[2][1] == mark) or \
        (board[0][2] == mark and board[1][2] == mark and board[2][2] == mark) or \
        (board[0][0] == mark and board[1][1] == mark and board[2][2] == mark) or \
        (board[2][0] == mark and board[1][1] == mark and board[0][2] == mark):
        return True
    elif ' ' not in board[0] and ' ' not in board[1] and ' ' not in board[2]:
        return True
    else:
        return False

# Ход компьютера
def computer_turn():
    win_pos = find_win_mark('X')  # Ищем выигрышный ход игрока
    if win_pos is not None:
        row, col = win_pos
    else:
        while True:
            row = random.randint(0, 2)
            col = random.randint(0, 2)
            if board[row][col] == ' ':
                break
    board[row][col] = 'O'
    print('Компьютер походил:')
    print_board()
    if check_win('O'):
        print('Компьютер выиграл!')
        quit()

# Поиск выигрышного хода
def find_win_mark(mark):
    for i in range(3):
        # Проверяем возможность выигрыша по горизонтали
        if board[i].count(mark) == 2 and ' ' in board[i]:
            return (i, board[i].index(' '))
        # Проверяем возможность выигрыша по вертикали
        col = [board[j][i] for j in range(3)]
        if col.count(mark) == 2 and ' ' in col:
            return (col.index(' '), i)
    # Проверяем возможность выигрыша по диагонали (левая верхняя - правая нижняя)
    diag1 = [board[i][i] for i in range(3)]
    if diag1.count(mark) == 2 and ' ' in diag1:
        ind = diag1.index(' ')
        return (ind, ind)
    # Проверяем возможность выигрыша по диагонали (правая верхняя - левая нижняя)
    diag2 = [board[i][2-i] for i in range(3)]
    if diag2.count(mark) == 2 and ' ' in diag2:
        ind = diag2.index(' ')
        return (ind, 2-ind)
    return None


# Ход игрока
def player_turn():
    while True:
        row = int(input('Выберите строку (1-3): ')) - 1
        col = int(input('Выберите столбец (1-3): ')) - 1
        if board[row][col] == ' ':
            board[row][col] = 'X'
            print('Вы походили:')
            print_board()
            if check_win('X'):
                print('Вы выиграли!')
                quit()
            break

# Основной игровой цикл
print_board()
while True:
    player_turn()
    computer_turn()
